#!/usr/bin/env python3
"""
üïµÔ∏è SERVIDOR DE AN√ÅLISIS DE EXPOSICI√ìN DE DATOS - EDICI√ìN REVELADA (ESPA√ëOL)
==================================================================================

Un servidor Flask que revela EXACTAMENTE qu√© datos pueden ver los sitios web sobre ti.
Esta versi√≥n incluye explicaciones detalladas en espa√±ol para educaci√≥n en ciberseguridad.

Uso: python server_revelado.py
Luego visita: http://localhost:5000

Autor: Asistente de Ciberseguridad
Fecha: 5 de septiembre de 2025
Versi√≥n: 2.0 (Revelada - Espa√±ol)
"""

from flask import Flask, request, jsonify, render_template_string
import hashlib
import json
import requests
from datetime import datetime
from urllib.parse import urlparse
import re
import platform
import socket

app = Flask(__name__)

# Plantilla HTML mejorada en espa√±ol
PAGINA_DEMO = '''
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üïµÔ∏è An√°lisis de Exposici√≥n de Datos Personales</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: #ffffff;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 15px;
            padding: 30px;
            backdrop-filter: blur(10px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
        }
        
        .header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: rgba(255, 0, 0, 0.2);
            border-radius: 10px;
            border: 2px solid #ff6b6b;
        }
        
        .warning {
            background: rgba(255, 107, 107, 0.3);
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            border-left: 5px solid #ff6b6b;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { opacity: 0.8; }
            50% { opacity: 1; }
            100% { opacity: 0.8; }
        }
        
        .scan-button {
            background: linear-gradient(45deg, #ff6b6b, #ee5a5a);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: bold;
            display: block;
            margin: 20px auto;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(255, 107, 107, 0.4);
        }
        
        .scan-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 7px 20px rgba(255, 107, 107, 0.6);
        }
        
        .loading {
            text-align: center;
            font-size: 18px;
            color: #4ecdc4;
            display: none;
        }
        
        .spinner {
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top: 4px solid #4ecdc4;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .results {
            margin-top: 30px;
            padding: 20px;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 10px;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .section {
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            margin: 15px 0;
            border-radius: 10px;
            border-left: 4px solid #4CAF50;
        }
        
        .section.warning {
            border-left-color: #ff6b6b;
            background: rgba(255, 107, 107, 0.2);
        }
        
        .section.info {
            border-left-color: #2196F3;
            background: rgba(33, 150, 243, 0.2);
        }
        
        .data-item {
            margin: 10px 0;
            padding: 10px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 5px;
        }
        
        .data-label {
            font-weight: bold;
            color: #4ecdc4;
            margin-bottom: 5px;
        }
        
        .data-value {
            color: #ff6b6b;
            font-family: 'Courier New', monospace;
            margin-bottom: 5px;
            word-break: break-all;
        }
        
        .data-explanation {
            font-style: italic;
            color: #ffffff;
            opacity: 0.9;
            font-size: 0.9em;
            line-height: 1.4;
        }
        
        .privacy-score {
            text-align: center;
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
            font-size: 1.5em;
            font-weight: bold;
        }
        
        .score-high {
            background: rgba(76, 175, 80, 0.3);
            border: 2px solid #4CAF50;
        }
        
        .score-medium {
            background: rgba(255, 193, 7, 0.3);
            border: 2px solid #FFC107;
        }
        
        .score-low {
            background: rgba(255, 107, 107, 0.3);
            border: 2px solid #ff6b6b;
        }
        
        .collapsible {
            cursor: pointer;
            padding: 10px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 5px;
            margin: 10px 0;
            transition: background 0.3s ease;
        }
        
        .collapsible:hover {
            background: rgba(255, 255, 255, 0.2);
        }
        
        .collapsible-content {
            display: none;
            padding: 15px;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 5px;
            margin-top: 10px;
        }
        
        .protection-tip {
            margin: 8px 0;
            padding: 12px;
            background: rgba(76, 175, 80, 0.2);
            border-radius: 6px;
            border-left: 3px solid #4CAF50;
        }
        
        .risk-factor {
            margin: 5px 0;
            padding: 8px;
            background: rgba(255, 107, 107, 0.2);
            border-radius: 4px;
            border-left: 3px solid #ff6b6b;
        }
        
        .evaluation-step {
            margin: 10px 0;
            padding: 12px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 6px;
            border-left: 3px solid #4ecdc4;
        }
        
        .positive-factor {
            background: rgba(76, 175, 80, 0.2);
            border-left-color: #4CAF50;
        }
        
        .negative-factor {
            background: rgba(255, 107, 107, 0.2);
            border-left-color: #ff6b6b;
        }
        
        .calculation-box {
            background: rgba(0, 0, 0, 0.3);
            padding: 15px;
            border-radius: 8px;
            font-family: 'Courier New', monospace;
            margin: 15px 0;
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 15px;
                margin: 10px;
            }
            
            .header h1 {
                font-size: 1.5em;
            }
            
            .scan-button {
                padding: 12px 25px;
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üïµÔ∏è AN√ÅLISIS DE EXPOSICI√ìN DE DATOS PERSONALES</h1>
            <p style="margin-top: 10px; font-size: 1.1em;">Descubre EXACTAMENTE qu√© informaci√≥n pueden ver los sitios web sobre ti</p>
        </div>
        
        <div class="warning">
            <h2>‚ö†Ô∏è ADVERTENCIA DE PRIVACIDAD</h2>
            <p><strong>Este es un demostrador educativo de ciberseguridad.</strong></p>
            <p>Los sitios web reales pueden recopilar TODA esta informaci√≥n (y m√°s) sin tu conocimiento o consentimiento expl√≠cito. Esta herramienta te muestra lo vulnerable que est√° tu privacidad en l√≠nea.</p>
            <p><strong>¬°PROT√âGETE!</strong> Usa esta informaci√≥n para mejorar tu privacidad digital.</p>
        </div>
        
        <div style="text-align: center;">
            <button class="scan-button" onclick="iniciarEscaneo()">
                üîç ESCANEAR MI EXPOSICI√ìN DE DATOS
            </button>
            
            <div style="margin: 20px 0; display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;">
                <button onclick="establecerCookiesDemo()" style="background: #FFC107; color: #000; border: none; padding: 10px 15px; border-radius: 15px; cursor: pointer; font-weight: bold;">
                    üç™ Establecer Cookies de Prueba
                </button>
                <button onclick="limpiarCookies()" style="background: #f44336; color: white; border: none; padding: 10px 15px; border-radius: 15px; cursor: pointer; font-weight: bold;">
                    üóëÔ∏è Limpiar Cookies
                </button>
                <button onclick="probarConfiguracion()" style="background: #4CAF50; color: white; border: none; padding: 10px 15px; border-radius: 15px; cursor: pointer; font-weight: bold;">
                    ‚öôÔ∏è Probar Mi Configuraci√≥n
                </button>
                <button onclick="verConsejosPrivacidad()" style="background: #2196F3; color: white; border: none; padding: 10px 15px; border-radius: 15px; cursor: pointer; font-weight: bold;">
                    üí° Consejos de Privacidad
                </button>
            </div>
        </div>
        
        <div class="loading" id="cargando">
            <div class="spinner"></div>
            <p>Analizando tu huella digital...</p>
            <p>Recopilando datos de tu navegador...</p>
            <p>Evaluando riesgos de privacidad...</p>
        </div>
        
        <div id="resultados" class="results" style="display: none;"></div>
    </div>

    <script>
        async function iniciarEscaneo() {
            document.getElementById('cargando').style.display = 'block';
            document.getElementById('resultados').style.display = 'none';
            
            // Simular tiempo de carga realista
            await new Promise(resolve => setTimeout(resolve, 1500));
            
            // Recopilar datos del lado del cliente
            const datosCliente = recopilarDatosCliente();
            
            try {
                const respuesta = await fetch('/analizar', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(datosCliente)
                });
                
                const datos = await respuesta.json();
                mostrarResultadosExplicados(datos);
                
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('resultados').innerHTML = 
                    '<div style="color: #ff6b6b; text-align: center;">Error al analizar los datos. Intenta de nuevo.</div>';
            }
            
            document.getElementById('cargando').style.display = 'none';
            document.getElementById('resultados').style.display = 'block';
        }
        
        function recopilarDatosCliente() {
            // Recopilar informaci√≥n del navegador y dispositivo
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            ctx.textBaseline = 'top';
            ctx.font = '14px Arial';
            ctx.fillText('Huella digital de canvas üîç', 2, 2);
            const huellaCanvas = canvas.toDataURL().substring(0, 50);
            
            // Informaci√≥n WebGL
            const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');
            const huellaWebGL = gl ? 
                gl.getParameter(gl.VENDOR) + ' - ' + gl.getParameter(gl.RENDERER) : 
                'WebGL no disponible';
            
            // Informaci√≥n del navegador
            const infoNavegador = {
                idioma: navigator.language,
                idiomas: navigator.languages || [navigator.language],
                plataforma: navigator.platform,
                fabricante: navigator.vendor || 'Desconocido',
                cookiesHabilitadas: navigator.cookieEnabled,
                noRastrear: navigator.doNotTrack,
                concurrenciaHardware: navigator.hardwareConcurrency || 'Desconocido',
                puntosToqueMaximos: navigator.maxTouchPoints || 0,
                enLinea: navigator.onLine
            };
            
            // Informaci√≥n de almacenamiento
            let infoAlmacenamiento = {
                localStorage: false,
                sessionStorage: false,
                datosLocalStorage: {},
                datosSessionStorage: {}
            };
            
            try {
                infoAlmacenamiento.localStorage = typeof(Storage) !== "undefined" && localStorage;
                infoAlmacenamiento.sessionStorage = typeof(Storage) !== "undefined" && sessionStorage;
                
                if (infoAlmacenamiento.localStorage) {
                    for (let i = 0; i < localStorage.length; i++) {
                        const clave = localStorage.key(i);
                        infoAlmacenamiento.datosLocalStorage[clave] = localStorage.getItem(clave).substring(0, 100);
                    }
                }
                
                if (infoAlmacenamiento.sessionStorage) {
                    for (let i = 0; i < sessionStorage.length; i++) {
                        const clave = sessionStorage.key(i);
                        infoAlmacenamiento.datosSessionStorage[clave] = sessionStorage.getItem(clave).substring(0, 100);
                    }
                }
            } catch (e) {
                console.log('Error accediendo al almacenamiento:', e);
            }
            
            // Informaci√≥n de plugins
            const plugins = [];
            for (let i = 0; i < navigator.plugins.length; i++) {
                plugins.push({
                    nombre: navigator.plugins[i].name,
                    descripcion: navigator.plugins[i].description
                });
            }
            
            return {
                huella_canvas: huellaCanvas,
                huella_webgl: huellaWebGL,
                ancho_pantalla: screen.width,
                alto_pantalla: screen.height,
                profundidad_color_pantalla: screen.colorDepth,
                relacion_pixeles_dispositivo: window.devicePixelRatio || 1,
                zona_horaria: Intl.DateTimeFormat().resolvedOptions().timeZone,
                java_habilitado: typeof java !== 'undefined',
                configuracion_regional: Intl.DateTimeFormat().resolvedOptions().locale,
                info_navegador: infoNavegador,
                plugins: plugins,
                info_almacenamiento: infoAlmacenamiento,
                alto_ventana: window.innerHeight,
                ancho_ventana: window.innerWidth,
                cookies: obtenerTodasLasCookies()
            };
        }
        
        function obtenerTodasLasCookies() {
            const cookies = {};
            if (document.cookie) {
                document.cookie.split(';').forEach(cookie => {
                    const [nombre, valor] = cookie.trim().split('=');
                    if (nombre && valor) {
                        cookies[nombre] = valor;
                    }
                });
            }
            return cookies;
        }
        
        function mostrarResultadosExplicados(datos) {
            const divResultados = document.getElementById('resultados');
            
            let html = '<div style="color: #ff6b6b; text-align: center; margin-bottom: 20px; font-size: 1.2em; font-weight: bold;">' +
                      'üö® ESTO ES LO QUE LOS SITIOS WEB PUEDEN VER SOBRE TI üö®' +
                      '</div>';
            
            // Puntuaci√≥n de privacidad con explicaci√≥n detallada
            const puntuacion = datos.puntuacion_privacidad || 50;
            const clasesPuntuacion = puntuacion > 70 ? 'score-high' : puntuacion > 40 ? 'score-medium' : 'score-low';
            const textoPuntuacion = puntuacion > 70 ? 'BUENA PRIVACIDAD' : puntuacion > 40 ? 'PRIVACIDAD MODERADA' : 'PRIVACIDAD DEFICIENTE';
            
            html += '<div class="privacy-score ' + clasesPuntuacion + '">' +
                   'üõ°Ô∏è Tu Puntuaci√≥n de Privacidad: ' + puntuacion + '/100 (' + textoPuntuacion + ')' +
                   '</div>';
            html += '<div style="font-style: italic; margin-bottom: 20px; text-align: center;">' + datos.explicacion_puntuacion + '</div>';
            
            // Mostrar evaluaci√≥n detallada
            if (datos.evaluacion_detallada) {
                html += '<div style="text-align: center; margin: 20px 0;">';
                html += '<button onclick="alternarEvaluacionDetallada()" style="background: #4ecdc4; color: #000; border: none; padding: 10px 20px; border-radius: 20px; cursor: pointer; font-weight: bold;">';
                html += 'üìä Ver Evaluaci√≥n Detallada y C√≥mo Mejorar';
                html += '</button>';
                html += '</div>';
                html += '<div id="evaluacionDetallada" style="display: none;">';
                html += mostrarEvaluacionDetallada(datos.evaluacion_detallada);
                html += '</div>';
            }
            
            // Secci√≥n de Ubicaci√≥n y Red
            html += crearSeccionExplicada('üìç Tu Ubicaci√≥n y Conexi√≥n a Internet', [
                {
                    etiqueta: 'Tu Direcci√≥n de Internet (IP)',
                    valor: datos.direccion_ip,
                    explicacion: datos.explicacion_ip
                },
                {
                    etiqueta: 'Tu Ubicaci√≥n Aproximada',
                    valor: datos.ubicacion,
                    explicacion: datos.explicacion_ubicacion
                },
                {
                    etiqueta: 'Tu Proveedor de Internet',
                    valor: datos.isp,
                    explicacion: datos.explicacion_isp
                },
                {
                    etiqueta: 'Tipo de Conexi√≥n',
                    valor: datos.tipo_conexion,
                    explicacion: datos.explicacion_conexion
                }
            ]);
            
            // Secci√≥n de Dispositivo y Navegador
            html += crearSeccionExplicada('üíª Tu Dispositivo y Navegador', [
                {
                    etiqueta: 'Sistema Operativo',
                    valor: datos.info_so,
                    explicacion: datos.explicacion_so
                },
                {
                    etiqueta: 'Navegador Web',
                    valor: datos.navegador,
                    explicacion: datos.explicacion_navegador
                },
                {
                    etiqueta: 'Resoluci√≥n de Pantalla',
                    valor: datos.info_pantalla,
                    explicacion: datos.explicacion_pantalla
                },
                {
                    etiqueta: 'Zona Horaria',
                    valor: datos.zona_horaria,
                    explicacion: datos.explicacion_zona_horaria
                },
                {
                    etiqueta: 'Preferencia de Idioma',
                    valor: datos.idioma,
                    explicacion: datos.explicacion_idioma
                }
            ]);
            
            // Secci√≥n de Huella Digital del Navegador (Mejorada)
            html += crearSeccionHuellaDigital(datos);
            
            // Secci√≥n de Seguimiento y Privacidad
            html += crearSeccionExplicada('üïµÔ∏è Informaci√≥n de Seguimiento y Privacidad', [
                {
                    etiqueta: 'Cookies en Tu Dispositivo',
                    valor: datos.contador_cookies + ' cookies encontradas',
                    explicacion: datos.explicacion_cookies
                },
                {
                    etiqueta: 'Cookies de Seguimiento',
                    valor: datos.tiene_cookies_seguimiento ? 'S√ç - ¬°Est√°s siendo rastreado!' : 'Ninguna detectada',
                    explicacion: datos.explicacion_seguimiento
                },
                {
                    etiqueta: 'Configuraci√≥n No Rastrear',
                    valor: datos.no_rastrear,
                    explicacion: datos.explicacion_nrt
                },
                {
                    etiqueta: 'ID de Sesi√≥n',
                    valor: datos.id_sesion,
                    explicacion: datos.explicacion_sesion
                }
            ]);
            
            // Secci√≥n de Riesgos de Privacidad
            if (datos.riesgo_seguimiento && datos.riesgo_seguimiento.factores) {
                html += '<div class="section warning">';
                html += '<h3>‚ö†Ô∏è Riesgos de Privacidad Detectados</h3>';
                html += '<div style="font-style: italic; margin-bottom: 10px;">' + datos.explicacion_riesgo + '</div>';
                html += '<div><strong>Nivel de Riesgo:</strong> ' + datos.riesgo_seguimiento.nivel + '</div>';
                html += '<div style="margin-top: 10px;"><strong>Riesgos Espec√≠ficos:</strong></div>';
                datos.riesgo_seguimiento.factores.forEach(factor => {
                    html += '<div class="risk-factor">‚Ä¢ ' + factor + '</div>';
                });
                html += '</div>';
            }
            
            // Consejos de Protecci√≥n
            html += '<div class="section" style="border-left-color: #4CAF50;">';
            html += '<h3>üõ°Ô∏è C√≥mo Proteger Tu Privacidad</h3>';
            html += '<div class="protection-tip">';
            html += '<strong>üîí Usa una VPN:</strong> Oculta tu direcci√≥n IP real y ubicaci√≥n de sitios web y anunciantes';
            html += '</div>';
            html += '<div class="protection-tip">';
            html += '<strong>üïµÔ∏è Navegaci√≥n Privada:</strong> Usa modo inc√≥gnito/privado para reducir el seguimiento entre sesiones';
            html += '</div>';
            html += '<div class="protection-tip">';
            html += '<strong>üö´ Bloqueadores de Anuncios:</strong> Instala uBlock Origin para bloquear rastreadores y anuncios maliciosos';
            html += '</div>';
            html += '<div class="protection-tip">';
            html += '<strong>üóëÔ∏è Limpiar Datos:</strong> Elimina regularmente cookies y datos de navegaci√≥n';
            html += '</div>';
            html += '<div class="protection-tip">';
            html += '<strong>üõ°Ô∏è Navegadores Seguros:</strong> Considera usar Firefox con configuraci√≥n endurecida o Tor Browser';
            html += '</div>';
            html += '</div>';
            
            // Protecci√≥n Espec√≠fica contra Huellas Digitales
            html += '<div class="section info">';
            html += '<h3>üîç Protecci√≥n Espec√≠fica contra Huellas Digitales</h3>';
            html += '<div class="protection-tip">';
            html += '<strong>üé≠ Extensiones Anti-Huella:</strong> Instala extensiones como Canvas Blocker o ClearURLs para falsificar o bloquear huellas digitales';
            html += '</div>';
            html += '<div class="protection-tip">';
            html += '<strong>üîÑ Cambiar User-Agent:</strong> Usa extensiones que rotan tu user-agent para confundir a los rastreadores';
            html += '</div>';
            html += '<div class="protection-tip">';
            html += '<strong>üì± Configuraci√≥n del Navegador:</strong> Desactiva JavaScript en sitios no confiables y ajusta la configuraci√≥n de privacidad';
            html += '</div>';
            html += '<div class="protection-tip">';
            html += '<strong>üéØ Resistencia de Huella Firefox:</strong> Activa "privacy.resistFingerprinting" en about:config';
            html += '</div>';
            html += '</div>';
            
            // Datos T√©cnicos (Colapsables)
            if (datos.datos_tecnicos) {
                html += '<div class="collapsible" onclick="alternarContenidoColapsable(this)">';
                html += '<h3>üîß Datos T√©cnicos Completos (Clic para expandir)</h3>';
                html += '</div>';
                html += '<div class="collapsible-content">';
                html += '<pre style="background: rgba(0,0,0,0.3); padding: 15px; border-radius: 5px; overflow-x: auto; font-size: 0.8em;">';
                html += JSON.stringify(datos.datos_tecnicos, null, 2);
                html += '</pre>';
                html += '</div>';
            }
            
            divResultados.innerHTML = html;
        }
        
        function crearSeccionExplicada(titulo, elementos) {
            let html = '<div class="section">';
            html += '<h3>' + titulo + '</h3>';
            
            elementos.forEach(elemento => {
                html += '<div class="data-item">';
                html += '<div class="data-label">' + elemento.etiqueta + ':</div>';
                html += '<div class="data-value">' + elemento.valor + '</div>';
                html += '<div class="data-explanation">' + elemento.explicacion + '</div>';
                html += '</div>';
            });
            
            html += '</div>';
            return html;
        }
        
        function crearSeccionHuellaDigital(datos) {
            let html = '<div class="section warning">';
            html += '<h3>üîç Huella Digital de Tu Navegador (Informaci√≥n Cr√≠tica)</h3>';
            html += '<div style="font-style: italic; margin-bottom: 15px;">';
            html += 'Tu huella digital del navegador es como una "firma" √∫nica que se crea combinando caracter√≠sticas de tu dispositivo y navegador. ';
            html += 'Esta informaci√≥n puede ser usada para rastrearte incluso sin cookies.';
            html += '</div>';
            
            const elementosHuella = [
                {
                    etiqueta: 'Huella √önica del Navegador',
                    valor: datos.huella_unica,
                    explicacion: datos.explicacion_huella
                },
                {
                    etiqueta: 'Huella Canvas',
                    valor: datos.huella_canvas || 'No disponible',
                    explicacion: datos.explicacion_canvas
                },
                {
                    etiqueta: 'Huella WebGL',
                    valor: datos.huella_webgl || 'No disponible',
                    explicacion: datos.explicacion_webgl
                },
                {
                    etiqueta: 'Informaci√≥n de Hardware',
                    valor: datos.info_hardware || 'No disponible',
                    explicacion: datos.explicacion_hardware
                },
                {
                    etiqueta: 'Plugins Instalados',
                    valor: datos.plugins ? datos.plugins.length + ' plugins detectados' : 'No disponible',
                    explicacion: datos.explicacion_plugins
                }
            ];
            
            elementosHuella.forEach(elemento => {
                if (elemento.valor && elemento.valor !== 'No disponible') {
                    html += '<div class="data-item">';
                    html += '<div class="data-label">' + elemento.etiqueta + ':</div>';
                    html += '<div class="data-value">' + elemento.valor + '</div>';
                    html += '<div class="data-explanation">' + elemento.explicacion + '</div>';
                    html += '</div>';
                }
            });
            
            // Resistencia de Huella Digital
            if (datos.resistencia_huella) {
                html += '<div style="margin-top: 15px; padding: 10px; background: rgba(255,193,7,0.2); border-radius: 5px; border-left: 3px solid #FFC107;">';
                html += '<div class="data-label">Resistencia a Huellas Digitales:</div>';
                html += '<div class="data-value">' + datos.resistencia_huella.nivel + '</div>';
                html += '<div class="data-explanation">' + datos.resistencia_huella.explicacion + '</div>';
                if (datos.resistencia_huella.recomendaciones) {
                    html += '<div style="margin-top: 10px;"><strong>Recomendaciones:</strong></div>';
                    datos.resistencia_huella.recomendaciones.forEach(rec => {
                        html += '<div style="margin: 5px 0; padding: 5px; background: rgba(255,255,255,0.1); border-radius: 3px;">‚Ä¢ ' + rec + '</div>';
                    });
                }
                html += '</div>';
            }
            
            html += '</div>';
            return html;
        }
        
        function mostrarEvaluacionDetallada(evaluacion) {
            let html = '<div class="section info">';
            html += '<h3>üìä Evaluaci√≥n Detallada de Privacidad</h3>';
            html += '<div style="margin-bottom: 15px; font-style: italic;">';
            html += 'Tu puntuaci√≥n se calcul√≥ evaluando los siguientes factores. Cada factor tiene un impacto espec√≠fico en tu privacidad:';
            html += '</div>';
            
            // Mostrar c√°lculo paso a paso
            html += '<div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 8px; margin: 15px 0;">';
            html += '<h4>üßÆ C√°lculo de Puntuaci√≥n:</h4>';
            html += '<div style="margin: 10px 0; font-family: monospace;">';
            html += '<span style="color: #4ecdc4;">Puntuaci√≥n inicial:</span> <span style="color: #ffffff;">' + evaluacion.puntuacion_inicial + ' puntos</span>';
            html += '</div>';
            
            // Factores negativos
            if (evaluacion.detalles_evaluacion && evaluacion.detalles_evaluacion.length > 0) {
                html += '<div style="margin-top: 15px;"><h4>‚ö†Ô∏è Factores que Reducen tu Privacidad:</h4>';
                evaluacion.detalles_evaluacion.forEach(factor => {
                    html += '<div style="background: rgba(255,107,107,0.2); margin: 8px 0; padding: 12px; border-radius: 6px; border-left: 3px solid #ff6b6b;">';
                    html += '<div style="font-weight: bold; color: #ff6b6b; margin-bottom: 5px;">' + factor.factor + ' ' + factor.impacto + '</div>';
                    html += '<div style="margin-bottom: 8px; font-size: 0.9em;">' + factor.explicacion + '</div>';
                    html += '<div style="font-weight: bold; color: #4ecdc4;">üí° C√≥mo mejorar:</div>';
                    html += '<div style="font-style: italic; color: #ffffff;">' + factor.mejora + '</div>';
                    html += '</div>';
                });
                html += '</div>';
            }
            
            // Factores positivos
            if (evaluacion.factores_positivos && evaluacion.factores_positivos.length > 0) {
                html += '<div style="margin-top: 15px;"><h4>‚úÖ Factores Positivos:</h4>';
                evaluacion.factores_positivos.forEach(factor => {
                    html += '<div style="background: rgba(76,175,80,0.2); margin: 8px 0; padding: 12px; border-radius: 6px; border-left: 3px solid #4CAF50;">';
                    html += '<div style="font-weight: bold; color: #4CAF50; margin-bottom: 5px;">' + factor.factor + ' ' + factor.beneficio + '</div>';
                    html += '<div style="font-size: 0.9em;">' + factor.explicacion + '</div>';
                    html += '</div>';
                });
                html += '</div>';
            }
            
            // Puntuaci√≥n final
            html += '<div style="margin-top: 15px; text-align: center; font-size: 1.2em;">';
            html += '<span style="color: #4ecdc4;">Puntuaci√≥n final:</span> ';
            html += '<span style="color: #ffffff; font-weight: bold; font-size: 1.3em;">' + evaluacion.puntuacion + '/100</span>';
            html += '<span style="color: #ffffff;"> (' + evaluacion.nivel + ')</span>';
            html += '</div>';
            
            // Recomendaciones principales
            if (evaluacion.recomendaciones_mejora && evaluacion.recomendaciones_mejora.length > 0) {
                html += '<div style="margin-top: 20px; background: rgba(255,193,7,0.2); padding: 15px; border-radius: 8px; border-left: 4px solid #FFC107;">';
                html += '<h4>üöÄ Acciones Inmediatas para Mejorar:</h4>';
                evaluacion.recomendaciones_mejora.forEach(recomendacion => {
                    html += '<div style="margin: 8px 0; padding: 8px; background: rgba(255,255,255,0.1); border-radius: 4px;">';
                    html += recomendacion;
                    html += '</div>';
                });
                html += '</div>';
            }
            
            html += '</div>';
            html += '</div>';
            
            return html;
        }
        
        function alternarContenidoColapsable(elemento) {
            const contenido = elemento.nextElementSibling;
            if (contenido.style.display === 'none' || contenido.style.display === '') {
                contenido.style.display = 'block';
            } else {
                contenido.style.display = 'none';
            }
        }
        
        function alternarEvaluacionDetallada() {
            const evaluacion = document.getElementById('evaluacionDetallada');
            const boton = event.target;
            
            if (evaluacion.style.display === 'none' || evaluacion.style.display === '') {
                evaluacion.style.display = 'block';
                boton.textContent = 'üìä Ocultar Evaluaci√≥n Detallada';
                boton.style.background = '#ff6b6b';
                boton.style.color = '#fff';
            } else {
                evaluacion.style.display = 'none';
                boton.textContent = 'üìä Ver Evaluaci√≥n Detallada y C√≥mo Mejorar';
                boton.style.background = '#4ecdc4';
                boton.style.color = '#000';
            }
        }
        
        async function establecerCookiesDemo() {
            try {
                const respuesta = await fetch('/establecer-cookies-demo');
                const datos = await respuesta.json();
                alert('‚úÖ ' + datos.mensaje + '\\n\\nCookies creadas: ' + datos.cookies_creadas.join(', ') + '\\n\\nüîÑ Haz clic en "Escanear" para ver el cambio');
            } catch (error) {
                alert('‚ùå Error al establecer cookies de demostraci√≥n');
            }
        }
        
        async function limpiarCookies() {
            try {
                const respuesta = await fetch('/limpiar-cookies');
                const datos = await respuesta.json();
                alert('üóëÔ∏è ' + datos.mensaje + '\\n\\nüîÑ Haz clic en "Escanear" para ver el cambio');
                // Recargar la p√°gina para reflejar los cambios
                setTimeout(() => window.location.reload(), 1000);
            } catch (error) {
                alert('‚ùå Error al limpiar cookies');
            }
        }
        
        async function probarConfiguracion() {
            try {
                const respuesta = await fetch('/prueba-configuracion');
                const datos = await respuesta.json();
                
                let mensaje = `üõ°Ô∏è PRUEBA DE CONFIGURACI√ìN DE PRIVACIDAD\\n`;
                mensaje += `Puntuaci√≥n: ${datos.puntuacion_total}/${datos.puntuacion_maxima}\\n`;
                mensaje += `Nivel: ${datos.nivel_general}\\n\\n`;
                mensaje += `${datos.mensaje}\\n\\n`;
                mensaje += `RESULTADOS DETALLADOS:\\n`;
                
                Object.entries(datos.pruebas).forEach(([nombre, resultado]) => {
                    mensaje += `‚Ä¢ ${resultado.descripcion} (${resultado.puntos} puntos)\\n`;
                });
                
                alert(mensaje);
            } catch (error) {
                alert('‚ùå Error al probar configuraci√≥n');
            }
        }
        
        async function verConsejosPrivacidad() {
            try {
                const respuesta = await fetch('/consejos-privacidad');
                const datos = await respuesta.json();
                
                // Crear contenido HTML con los consejos reales
                let contenidoConsejos = `
                    <html>
                    <head>
                        <title>Consejos de Privacidad Digital</title>
                        <style>
                            body { 
                                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
                                margin: 20px; 
                                line-height: 1.6; 
                                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                                color: #333;
                            }
                            .container {
                                max-width: 800px;
                                margin: 0 auto;
                                background: white;
                                padding: 30px;
                                border-radius: 15px;
                                box-shadow: 0 15px 35px rgba(0,0,0,0.1);
                            }
                            h1, h2, h3 { color: #333; margin-top: 0; }
                            h1 { text-align: center; color: #764ba2; }
                            .seccion { margin: 20px 0; }
                            .consejo { 
                                background: #f8f9ff; 
                                padding: 15px; 
                                margin: 10px 0; 
                                border-radius: 8px; 
                                border-left: 4px solid #667eea;
                            }
                            .consejo h4 { margin: 0 0 8px 0; color: #667eea; }
                            .navegador-item, .extension-item, .vpn-item { 
                                background: #e8f5e8; 
                                padding: 12px; 
                                margin: 8px 0; 
                                border-radius: 6px; 
                                border-left: 4px solid #4CAF50;
                            }
                            .habito-item { 
                                background: #fff3e0; 
                                padding: 10px; 
                                margin: 8px 0; 
                                border-radius: 6px; 
                                border-left: 4px solid #FF9800;
                            }
                            .nivel { 
                                background: #764ba2; 
                                color: white; 
                                padding: 4px 8px; 
                                border-radius: 4px; 
                                font-size: 0.8em; 
                                font-weight: bold;
                                display: inline-block;
                                margin-top: 8px;
                            }
                            .herramienta { 
                                background: #e8f5e8; 
                                padding: 12px; 
                                margin: 8px 0; 
                                border-radius: 6px; 
                                border-left: 4px solid #4CAF50;
                            }
                            .config { 
                                background: #fff3e0; 
                                padding: 10px; 
                                margin: 8px 0; 
                                border-radius: 6px; 
                                border-left: 4px solid #FF9800;
                            }
                            .navegador { margin: 15px 0; }
                            .navegador h4 { color: #FF9800; margin-bottom: 10px; }
                            .config-item { margin: 5px 0 5px 20px; }
                            .close-btn {
                                background: #764ba2;
                                color: white;
                                border: none;
                                padding: 12px 24px;
                                border-radius: 6px;
                                cursor: pointer;
                                font-size: 16px;
                                margin: 20px auto;
                                display: block;
                            }
                            .close-btn:hover { background: #5a3a7a; }
                            .pasos { margin-top: 10px; }
                            .pasos ul { margin: 5px 0; padding-left: 20px; }
                            .pasos li { margin: 3px 0; }
                        </style>
                    </head>
                    <body>
                        <div class="container">
                            <h1>ÔøΩÔ∏è Gu√≠a Completa de Privacidad Digital</h1>
                            <p style="text-align: center; font-style: italic; color: #666;">
                                <strong>Actualizada:</strong> ${new Date().toLocaleDateString('es-ES')}
                            </p>
                `;
                
                // Agregar navegadores seguros
                if (datos.consejos && datos.consejos.navegadores_seguros) {
                    contenidoConsejos += `
                        <div class="seccion">
                            <h2>üåê Navegadores Seguros Recomendados</h2>
                    `;
                    datos.consejos.navegadores_seguros.forEach(navegador => {
                        contenidoConsejos += `
                            <div class="navegador-item">
                                <h4>${navegador.nombre}</h4>
                                <p>${navegador.descripcion}</p>
                                <div class="nivel">Nivel: ${navegador.nivel}</div>
                                ${navegador.pasos ? `
                                    <div class="pasos">
                                        <strong>Pasos de configuraci√≥n:</strong>
                                        <ul>
                                            ${navegador.pasos.map(paso => `<li>${paso}</li>`).join('')}
                                        </ul>
                                    </div>
                                ` : ''}
                            </div>
                        `;
                    });
                    contenidoConsejos += `</div>`;
                }
                
                // Agregar extensiones de privacidad
                if (datos.consejos && datos.consejos.extensiones_privacidad) {
                    contenidoConsejos += `
                        <div class="seccion">
                            <h2>üß© Extensiones de Privacidad Esenciales</h2>
                    `;
                    datos.consejos.extensiones_privacidad.forEach(extension => {
                        contenidoConsejos += `
                            <div class="extension-item">
                                <h4>${extension.nombre}</h4>
                                <p><strong>Prop√≥sito:</strong> ${extension.proposito}</p>
                                <p><strong>Instalaci√≥n:</strong> ${extension.instalacion}</p>
                            </div>
                        `;
                    });
                    contenidoConsejos += `</div>`;
                }
                
                // Agregar VPNs recomendadas
                if (datos.consejos && datos.consejos.vpn_recomendadas) {
                    contenidoConsejos += `
                        <div class="seccion">
                            <h2>ÔøΩ VPNs Recomendadas</h2>
                    `;
                    datos.consejos.vpn_recomendadas.forEach(categoria => {
                        contenidoConsejos += `
                            <div class="vpn-item">
                                <h4>${categoria.categoria}</h4>
                                <p><strong>Opciones:</strong> ${categoria.opciones.join(', ')}</p>
                                <p><strong>Caracter√≠sticas:</strong> ${categoria.caracteristicas.join(', ')}</p>
                            </div>
                        `;
                    });
                    contenidoConsejos += `</div>`;
                }
                
                // Agregar configuraciones de dispositivo
                if (datos.consejos && datos.consejos.configuraciones_dispositivo) {
                    contenidoConsejos += `
                        <div class="seccion">
                            <h2>‚öôÔ∏è Configuraciones de Dispositivo</h2>
                    `;
                    
                    Object.keys(datos.consejos.configuraciones_dispositivo).forEach(dispositivo => {
                        contenidoConsejos += `
                            <div class="consejo">
                                <h4>${dispositivo.charAt(0).toUpperCase() + dispositivo.slice(1)}</h4>
                                <ul>
                                    ${datos.consejos.configuraciones_dispositivo[dispositivo].map(config => `<li>${config}</li>`).join('')}
                                </ul>
                            </div>
                        `;
                    });
                    contenidoConsejos += `</div>`;
                }
                
                // Agregar h√°bitos seguros
                if (datos.consejos && datos.consejos.habitos_seguros) {
                    contenidoConsejos += `
                        <div class="seccion">
                            <h2>‚úÖ H√°bitos de Seguridad Digital</h2>
                    `;
                    datos.consejos.habitos_seguros.forEach(habito => {
                        contenidoConsejos += `
                            <div class="habito-item">
                                ${habito}
                            </div>
                        `;
                    });
                    contenidoConsejos += `</div>`;
                }
                
                // Cerrar HTML
                contenidoConsejos += `
                            <p style="text-align: center; margin-top: 30px; padding: 20px; background: #f0f0f0; border-radius: 8px;">
                                <strong>üí° Recuerda:</strong> La privacidad es un proceso continuo, no un destino. 
                                Implementa estos consejos gradualmente y mantente actualizado sobre nuevas amenazas y soluciones.
                            </p>
                            <button class="close-btn" onclick="window.close()">üîí Cerrar Gu√≠a</button>
                        </div>
                    </body>
                    </html>
                `;
                
                // Crear nueva ventana con los consejos
                const ventanaConsejos = window.open('', '_blank', 'width=900,height=700,scrollbars=yes,resizable=yes');
                ventanaConsejos.document.write(contenidoConsejos);
                ventanaConsejos.document.close();
                
            } catch (error) {
                console.error('Error cargando consejos:', error);
                alert('‚ùå Error al cargar consejos de privacidad. Verifica tu conexi√≥n e intenta de nuevo.');
            }
        }
    </script>
</body>
</html>
'''

def obtener_ubicacion_ip(ip):
    """Obtener informaci√≥n de ubicaci√≥n basada en IP"""
    if ip.startswith(('127.', '192.168.', '10.', '172.')):
        return {
            'ciudad': 'Red Local',
            'region': 'IP Privada', 
            'pais': 'Local',
            'isp': 'Red Local',
            'precision': 'N/A - IP Privada'
        }
    
    try:
        # Usar un servicio gratuito de geolocalizaci√≥n IP
        respuesta = requests.get(f'http://ip-api.com/json/{ip}', timeout=5)
        if respuesta.status_code == 200:
            datos = respuesta.json()
            return {
                'ciudad': datos.get('city', 'Desconocido'),
                'region': datos.get('regionName', 'Desconocido'),
                'pais': datos.get('country', 'Desconocido'),
                'isp': datos.get('isp', 'Desconocido'),
                'precision': f"¬±{datos.get('accuracy', 'Desconocido')}km"
            }
    except:
        pass
    
    return {
        'ciudad': 'Desconocido',
        'region': 'Desconocido', 
        'pais': 'Desconocido',
        'isp': 'Desconocido',
        'precision': 'No disponible'
    }

def analizar_user_agent(user_agent):
    """Analizar el user agent para extraer informaci√≥n del SO y navegador"""
    so_info = 'Desconocido'
    info_navegador = 'Desconocido'
    
    if user_agent:
        user_agent_lower = user_agent.lower()
        
        # Detectar Sistema Operativo
        if 'windows nt 10' in user_agent_lower:
            so_info = 'Windows 10/11'
        elif 'windows nt 6.3' in user_agent_lower:
            so_info = 'Windows 8.1'
        elif 'windows nt 6.1' in user_agent_lower:
            so_info = 'Windows 7'
        elif 'mac os x' in user_agent_lower or 'macos' in user_agent_lower:
            so_info = 'macOS'
        elif 'iphone' in user_agent_lower:
            so_info = 'iOS (iPhone)'
        elif 'ipad' in user_agent_lower:
            so_info = 'iOS (iPad)'
        elif 'android' in user_agent_lower:
            so_info = 'Android'
        elif 'linux' in user_agent_lower:
            so_info = 'Linux'
        
        # Detectar Navegador
        if 'edg/' in user_agent_lower:
            info_navegador = 'Microsoft Edge'
        elif 'chrome/' in user_agent_lower and 'edg/' not in user_agent_lower:
            info_navegador = 'Google Chrome'
        elif 'firefox/' in user_agent_lower:
            info_navegador = 'Mozilla Firefox'
        elif 'safari/' in user_agent_lower and 'chrome/' not in user_agent_lower:
            info_navegador = 'Safari'
        elif 'opera/' in user_agent_lower or 'opr/' in user_agent_lower:
            info_navegador = 'Opera'
    
    return so_info, info_navegador

def calcular_puntuacion_privacidad(request):
    """Calcular una puntuaci√≥n de privacidad detallada basada en varios factores"""
    puntuacion_inicial = 100
    puntuacion_actual = puntuacion_inicial
    detalles_evaluacion = []
    factores_positivos = []
    recomendaciones_mejora = []
    
    # Evaluar cookies
    num_cookies = len(request.cookies) if request.cookies else 0
    if num_cookies > 10:
        reduccion = 30
        puntuacion_actual -= reduccion
        detalles_evaluacion.append({
            'factor': f'Muchas cookies detectadas ({num_cookies} cookies)',
            'impacto': f'-{reduccion} puntos',
            'explicacion': 'Tener muchas cookies facilita el seguimiento entre sitios web',
            'mejora': 'Elimina cookies regularmente y usa modo privado'
        })
        recomendaciones_mejora.append('üç™ Limpiar cookies: Ve a Configuraci√≥n > Privacidad > Borrar datos de navegaci√≥n')
    elif num_cookies > 5:
        reduccion = 20
        puntuacion_actual -= reduccion
        detalles_evaluacion.append({
            'factor': f'Varias cookies detectadas ({num_cookies} cookies)',
            'impacto': f'-{reduccion} puntos',
            'explicacion': 'Las cookies pueden ser usadas para rastrearte',
            'mejora': 'Configura tu navegador para bloquear cookies de terceros'
        })
        recomendaciones_mejora.append('üîí Bloquear cookies de terceros en la configuraci√≥n del navegador')
    elif num_cookies > 0:
        reduccion = 10
        puntuacion_actual -= reduccion
        detalles_evaluacion.append({
            'factor': f'Algunas cookies detectadas ({num_cookies} cookies)',
            'impacto': f'-{reduccion} puntos',
            'explicacion': 'Pocas cookies es aceptable para funcionalidad b√°sica',
            'mejora': 'Monitorea qu√© cookies aceptas'
        })
    else:
        factores_positivos.append({
            'factor': 'Sin cookies detectadas',
            'beneficio': '+0 puntos (excelente)',
            'explicacion': 'No hay cookies que puedan rastrearte'
        })
    
    # Evaluar header Referer
    if request.headers.get('Referer'):
        reduccion = 15
        puntuacion_actual -= reduccion
        detalles_evaluacion.append({
            'factor': 'Header Referer presente',
            'impacto': f'-{reduccion} puntos',
            'explicacion': 'El header Referer revela desde qu√© sitio viniste',
            'mejora': 'Configura tu navegador para no enviar referrer'
        })
        recomendaciones_mejora.append('üîó Configurar referrer policy: Usar extensiones como uBlock Origin')
    else:
        factores_positivos.append({
            'factor': 'Sin header Referer',
            'beneficio': '+0 puntos (bueno)',
            'explicacion': 'Tu historial de navegaci√≥n no se revela'
        })
    
    # Evaluar Do Not Track
    if not request.headers.get('DNT'):
        reduccion = 10
        puntuacion_actual -= reduccion
        detalles_evaluacion.append({
            'factor': 'Do Not Track no configurado',
            'impacto': f'-{reduccion} puntos',
            'explicacion': 'No est√°s pidiendo expl√≠citamente no ser rastreado',
            'mejora': 'Activa la opci√≥n "Do Not Track" en tu navegador'
        })
        recomendaciones_mejora.append('üö´ Activar Do Not Track: Configuraci√≥n > Privacidad > Solicitar que no me rastreen')
    else:
        factores_positivos.append({
            'factor': 'Do Not Track activado',
            'beneficio': '+0 puntos (excelente)',
            'explicacion': 'Est√°s pidiendo no ser rastreado (aunque no siempre se respeta)'
        })
    
    # Evaluar conexi√≥n segura
    if not request.is_secure:
        reduccion = 15
        puntuacion_actual -= reduccion
        detalles_evaluacion.append({
            'factor': 'Conexi√≥n HTTP (no segura)',
            'impacto': f'-{reduccion} puntos',
            'explicacion': 'Las conexiones HTTP pueden ser interceptadas',
            'mejora': 'Siempre usa HTTPS y habilita "HTTPS-Only mode"'
        })
        recomendaciones_mejora.append('üîí Usar solo HTTPS: Instalar extensi√≥n "HTTPS Everywhere"')
    else:
        factores_positivos.append({
            'factor': 'Conexi√≥n HTTPS segura',
            'beneficio': '+0 puntos (excelente)',
            'explicacion': 'Tu conexi√≥n est√° cifrada'
        })
    
    # Evaluar headers de fingerprinting
    headers_fingerprinting = {
        'Sec-Ch-Ua': 'Informaci√≥n del navegador',
        'Sec-Ch-Ua-Platform': 'Informaci√≥n de la plataforma',
        'Sec-Ch-Ua-Mobile': 'Informaci√≥n si es m√≥vil'
    }
    
    headers_presentes = []
    for header, descripcion in headers_fingerprinting.items():
        if request.headers.get(header):
            reduccion = 5
            puntuacion_actual -= reduccion
            headers_presentes.append(f"{header} ({descripcion})")
    
    if headers_presentes:
        detalles_evaluacion.append({
            'factor': f'Headers de fingerprinting detectados',
            'impacto': f'-{len(headers_presentes) * 5} puntos',
            'explicacion': f'Headers presentes: {", ".join(headers_presentes)}',
            'mejora': 'Usar navegadores con resistencia a fingerprinting como Firefox con configuraci√≥n endurecida'
        })
        recomendaciones_mejora.append('üõ°Ô∏è Firefox endurecido: Activar "privacy.resistFingerprinting" en about:config')
    else:
        factores_positivos.append({
            'factor': 'Sin headers de fingerprinting detectados',
            'beneficio': '+0 puntos (bueno)',
            'explicacion': 'Tu navegador no est√° enviando informaci√≥n identificativa extra'
        })
    
    # Evaluar User-Agent
    user_agent = request.headers.get('User-Agent', '')
    if 'Chrome' in user_agent and 'Edg' not in user_agent:
        reduccion = 5
        puntuacion_actual -= reduccion
        detalles_evaluacion.append({
            'factor': 'Navegador Chrome detectado',
            'impacto': f'-{reduccion} puntos',
            'explicacion': 'Chrome tiene menos protecciones de privacidad por defecto',
            'mejora': 'Considera usar Firefox o navegadores orientados a privacidad'
        })
        recomendaciones_mejora.append('üåê Cambiar navegador: Firefox, Brave, o Tor Browser para mejor privacidad')
    
    puntuacion_final = max(0, min(100, puntuacion_actual))
    
    return {
        'puntuacion': puntuacion_final,
        'puntuacion_inicial': puntuacion_inicial,
        'detalles_evaluacion': detalles_evaluacion,
        'factores_positivos': factores_positivos,
        'recomendaciones_mejora': recomendaciones_mejora,
        'nivel': 'EXCELENTE' if puntuacion_final >= 80 else 'BUENA' if puntuacion_final >= 60 else 'REGULAR' if puntuacion_final >= 40 else 'DEFICIENTE'
    }

def evaluar_riesgo_seguimiento(request):
    """Evaluar el riesgo de seguimiento basado en la solicitud"""
    factores_riesgo = []
    
    if len(request.cookies) > 5:
        factores_riesgo.append("Muchas cookies presentes")
    
    if request.headers.get('Referer'):
        factores_riesgo.append("Header Referer expone historial de navegaci√≥n")
    
    if not request.headers.get('DNT'):
        factores_riesgo.append("Preferencia No Rastrear no establecida")
    
    if any(request.headers.get(h) for h in ['Sec-Ch-Ua', 'Sec-Ch-Ua-Platform']):
        factores_riesgo.append("Headers de fingerprinting del navegador presentes")
    
    if not request.is_secure:
        factores_riesgo.append("Conexi√≥n no segura (HTTP)")
    
    if len(factores_riesgo) >= 4:
        nivel = "MUY ALTO"
    elif len(factores_riesgo) >= 3:
        nivel = "ALTO"
    elif len(factores_riesgo) >= 2:
        nivel = "MODERADO"
    else:
        nivel = "BAJO"
    
    return {
        'nivel': nivel,
        'factores': factores_riesgo
    }

def calcular_resistencia_huella(datos_cliente):
    """Calcular la resistencia a fingerprinting del navegador"""
    puntuacion_resistencia = 100
    factores_vulnerabilidad = []
    recomendaciones = []
    
    # Verificar Canvas fingerprinting
    if datos_cliente.get('huella_canvas') and datos_cliente['huella_canvas'] != 'No disponible':
        puntuacion_resistencia -= 25
        factores_vulnerabilidad.append("Canvas fingerprinting habilitado")
        recomendaciones.append("Usar extensi√≥n Canvas Blocker")
    
    # Verificar WebGL fingerprinting
    if datos_cliente.get('huella_webgl') and 'WebGL no disponible' not in str(datos_cliente['huella_webgl']):
        puntuacion_resistencia -= 20
        factores_vulnerabilidad.append("WebGL fingerprinting habilitado")
        recomendaciones.append("Deshabilitar WebGL en sitios no confiables")
    
    # Verificar n√∫mero de plugins
    plugins = datos_cliente.get('plugins', [])
    if len(plugins) > 5:
        puntuacion_resistencia -= 15
        factores_vulnerabilidad.append("Muchos plugins detectables")
        recomendaciones.append("Reducir n√∫mero de plugins instalados")
    
    # Verificar informaci√≥n de hardware
    hardware_info = datos_cliente.get('info_navegador', {})
    if hardware_info.get('hardwareConcurrency', 0) > 0:
        puntuacion_resistencia -= 10
        factores_vulnerabilidad.append("Informaci√≥n de hardware expuesta")
        recomendaciones.append("Usar navegador con resistencia a fingerprinting")
    
    # Verificar resoluci√≥n de pantalla √∫nica
    ancho = datos_cliente.get('ancho_pantalla', 0)
    alto = datos_cliente.get('alto_pantalla', 0)
    if ancho and alto:
        # Resoluciones comunes son menos identificables
        resoluciones_comunes = [
            (1920, 1080), (1366, 768), (1280, 720), (1440, 900),
            (1536, 864), (1600, 900), (1024, 768)
        ]
        if (ancho, alto) not in resoluciones_comunes:
            puntuacion_resistencia -= 15
            factores_vulnerabilidad.append("Resoluci√≥n de pantalla poco com√∫n")
            recomendaciones.append("Considerar cambiar resoluci√≥n a una m√°s com√∫n")
    
    # Determinar nivel de resistencia
    if puntuacion_resistencia >= 80:
        nivel = "ALTA"
        explicacion = "Tu navegador tiene buena resistencia al fingerprinting"
    elif puntuacion_resistencia >= 60:
        nivel = "MODERADA"
        explicacion = "Tu navegador tiene resistencia moderada al fingerprinting"
    elif puntuacion_resistencia >= 40:
        nivel = "BAJA"
        explicacion = "Tu navegador es vulnerable al fingerprinting"
    else:
        nivel = "MUY BAJA"
        explicacion = "Tu navegador es muy vulnerable al fingerprinting"
    
    return {
        'nivel': nivel,
        'puntuacion': puntuacion_resistencia,
        'explicacion': explicacion,
        'factores_vulnerabilidad': factores_vulnerabilidad,
        'recomendaciones': recomendaciones
    }

@app.route('/')
def indice():
    """P√°gina principal con la demostraci√≥n"""
    return render_template_string(PAGINA_DEMO)

@app.route('/analizar', methods=['GET', 'POST'])
def analizar_solicitud():
    """Analizar la solicitud y devolver informaci√≥n completa de exposici√≥n de datos con explicaciones en espa√±ol"""
    # Obtener IP del cliente (manejar proxies/balanceadores de carga)
    ip_cliente = request.headers.get('X-Forwarded-For', 
                request.headers.get('X-Real-IP', 
                request.remote_addr)).split(',')[0].strip()
    
    # Obtener datos de ubicaci√≥n
    datos_ubicacion = obtener_ubicacion_ip(ip_cliente)
    
    # Analizar user agent
    user_agent = request.headers.get('User-Agent', 'Desconocido')
    so_info, info_navegador = analizar_user_agent(user_agent)
    
    # Obtener datos del lado del cliente
    datos_cliente = request.get_json() or {}
    
    # Calcular resistencia a fingerprinting
    resistencia_huella = calcular_resistencia_huella(datos_cliente)
    
    # Calcular evaluaci√≥n detallada de privacidad
    evaluacion_privacidad = calcular_puntuacion_privacidad(request)
    
    # Recopilar datos completos con explicaciones en espa√±ol
    datos_exposicion = {
        # Informaci√≥n de Red
        'direccion_ip': ip_cliente,
        'explicacion_ip': 'Tu direcci√≥n √∫nica de internet que los sitios web usan para enviarte datos de vuelta. Esto puede revelar tu ubicaci√≥n aproximada y proveedor de internet.',
        
        'ubicacion': f"{datos_ubicacion['ciudad']}, {datos_ubicacion['region']}, {datos_ubicacion['pais']}",
        'explicacion_ubicacion': 'Tu ubicaci√≥n f√≠sica aproximada basada en tu direcci√≥n IP. Precisa dentro de un radio de 1-50km.',
        
        'isp': datos_ubicacion['isp'],
        'explicacion_isp': 'Tu Proveedor de Servicios de Internet - la empresa a la que pagas por acceso a internet. Esto puede revelar tu √°rea general y tipo de conexi√≥n.',
        
        'tipo_conexion': 'Banda Ancha/M√≥vil' if not ip_cliente.startswith(('127.', '192.168.')) else 'Local',
        'explicacion_conexion': 'El tipo de conexi√≥n a internet que est√°s usando (WiFi, datos m√≥viles, cable, etc.).',
        
        # Informaci√≥n de Dispositivo y Navegador
        'info_so': so_info,
        'explicacion_so': 'Tu sistema operativo (Windows, Mac, iPhone, etc.). Esto ayuda a los sitios web a optimizar el contenido para tu dispositivo.',
        
        'navegador': info_navegador,
        'explicacion_navegador': 'Tu software de navegador web. Diferentes navegadores tienen diferentes capacidades y caracter√≠sticas de seguridad.',
        
        'user_agent': user_agent,
        'explicacion_user_agent': 'Una cadena detallada que identifica tu navegador, sistema operativo y dispositivo. Esto es como una huella digital.',
        
        'idioma': request.headers.get('Accept-Language', 'Desconocido').split(',')[0],
        'explicacion_idioma': 'Tu configuraci√≥n de idioma preferido. Esto puede revelar tu regi√≥n geogr√°fica y trasfondo cultural.',
        
        'no_rastrear': request.headers.get('DNT', 'No establecido'),
        'explicacion_nrt': 'Una configuraci√≥n que dice a los sitios web que no quieres ser rastreado. Sin embargo, los sitios web pueden ignorar esta preferencia.',
        
        # Detalles de Pantalla y Dispositivo (del lado del cliente)
        'info_pantalla': f"{datos_cliente.get('ancho_pantalla', 'Desconocido')} x {datos_cliente.get('alto_pantalla', 'Desconocido')} p√≠xeles",
        'explicacion_pantalla': 'Tu resoluci√≥n de pantalla. Esto ayuda a crear una huella √∫nica de tu dispositivo y puede revelar tu tipo de dispositivo.',
        
        'zona_horaria': datos_cliente.get('zona_horaria', 'Desconocido'),
        'explicacion_zona_horaria': 'Tu configuraci√≥n de zona horaria. Esto puede revelar tu ubicaci√≥n geogr√°fica y patrones diarios.',
        
        'relacion_pixeles_dispositivo': datos_cliente.get('relacion_pixeles_dispositivo', 'Desconocido'),
        'explicacion_pixel_ratio': 'C√≥mo tu dispositivo muestra los p√≠xeles. Las pantallas de alta densidad tienen diferentes proporciones, ayudando a identificar tipos de dispositivos.',
        
        # Cookies y Seguimiento
        'cookies': dict(request.cookies) if request.cookies else {},
        'contador_cookies': len(request.cookies) if request.cookies else 0,
        'explicacion_cookies': 'Peque√±os archivos almacenados en tu dispositivo que recuerdan informaci√≥n sobre ti. Estos pueden rastrearte a trav√©s de sitios web.',
        
        'tiene_cookies_sesion': any('sesion' in k.lower() or 'session' in k.lower() for k in request.cookies.keys()) if request.cookies else False,
        'explicacion_sesion': 'Cookies temporales que te recuerdan durante tu sesi√≥n actual de navegaci√≥n.',
        
        'tiene_cookies_seguimiento': any(rastreador in k.lower() for k in request.cookies.keys() for rastreador in ['ga', 'fb', 'track', 'analytics', '_utm']) if request.cookies else False,
        'explicacion_seguimiento': 'Cookies usadas por empresas publicitarias para seguirte a trav√©s de diferentes sitios web y construir perfiles.',
        
        # Huella Digital del Navegador
        'id_sesion': hashlib.md5((ip_cliente + user_agent).encode()).hexdigest()[:12],
        'explicacion_sesion': 'Un identificador √∫nico creado para tu visita actual. Esto puede ser usado para rastrear tus acciones en el sitio web.',
        
        'huella_unica': hashlib.sha256((ip_cliente + user_agent + str(request.headers.get('Accept-Language', ''))).encode()).hexdigest()[:16],
        'explicacion_huella': 'Una firma √∫nica creada a partir de las caracter√≠sticas de tu navegador y dispositivo. Esto puede rastrearte incluso sin cookies.',
        
        'huella_canvas': datos_cliente.get('huella_canvas', 'No disponible'),
        'explicacion_canvas': 'Una firma √∫nica creada por c√≥mo tu dispositivo dibuja gr√°ficos. Diferentes dispositivos producen diferentes firmas, siendo altamente identificativa.',
        
        'huella_webgl': datos_cliente.get('huella_webgl', 'No disponible'),
        'explicacion_webgl': 'Informaci√≥n sobre tu tarjeta gr√°fica y controladores. Esto es altamente √∫nico y puede identificar tu dispositivo espec√≠fico.',
        
        # Headers de Seguridad
        'referer': request.headers.get('Referer', 'Visita directa'),
        'explicacion_referer': 'El sitio web del que viniste antes de visitar esta p√°gina. Esto revela tu historial de navegaci√≥n a los sitios web.',
        
        'origen': request.headers.get('Origin', 'No establecido'),
        'explicacion_origen': 'El sitio web que inici√≥ esta solicitud. Usado para seguridad pero puede revelar tus patrones de navegaci√≥n.',
        
        'sec_fetch_site': request.headers.get('Sec-Fetch-Site', 'No establecido'),
        'explicacion_sec_fetch': 'Headers de seguridad que los navegadores env√≠an para proteger contra ataques, pero tambi√©n proporcionan datos de fingerprinting.',
        
        'riesgo_seguimiento': evaluar_riesgo_seguimiento(request),
        'explicacion_riesgo': 'Evaluaci√≥n de qu√© tan f√°cilmente las empresas pueden rastrearte y perfilarte basado en los datos que est√°s compartiendo.',
        
        # Evaluaci√≥n de Privacidad (Detallada)
        'puntuacion_privacidad': evaluacion_privacidad['puntuacion'],
        'evaluacion_detallada': evaluacion_privacidad,
        'explicacion_puntuacion': f'Tu nivel de protecci√≥n de privacidad es {evaluacion_privacidad["nivel"]} ({evaluacion_privacidad["puntuacion"]}/100). Esta puntuaci√≥n se calcula evaluando m√∫ltiples factores de riesgo.',
        
        # Capacidades de Almacenamiento
        'info_almacenamiento': datos_cliente.get('info_almacenamiento', {}),
        'explicacion_almacenamiento': 'Qu√© tipos de almacenamiento de datos soporta tu navegador. Los sitios web pueden usar estos para almacenar informaci√≥n de seguimiento.',
        
        # Informaci√≥n de Hardware
        'info_hardware': datos_cliente.get('info_navegador', {}).get('concurrenciaHardware', 'Desconocido'),
        'explicacion_hardware': 'Informaci√≥n sobre el poder de procesamiento de tu dispositivo. Esto ayuda a crear una huella √∫nica del dispositivo.',
        
        'plugins': datos_cliente.get('plugins', []),
        'explicacion_plugins': 'Extensiones de software instaladas en tu navegador. La combinaci√≥n de plugins puede identificarte de manera √∫nica.',
        
        # Resistencia a Fingerprinting
        'resistencia_huella': resistencia_huella,
        
        # Timestamp
        'timestamp': datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC'),
        
        # Datos completos para usuarios t√©cnicos
        'datos_tecnicos': {
            'todos_los_headers': dict(request.headers),
            'detalles_solicitud': {
                'metodo': request.method,
                'url': request.url,
                'timestamp': datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC'),
                'es_seguro': request.is_secure,
                'ruta_completa': request.full_path,
                'parametros_query': dict(request.args),
                'datos_formulario': dict(request.form) if request.form else {},
                'datos_json': datos_cliente
            }
        }
    }
    
    return jsonify(datos_exposicion)

@app.route('/establecer-cookies-demo')
def establecer_cookies_demo():
    """Establecer cookies de demostraci√≥n para mostrar el seguimiento"""
    from flask import make_response
    
    respuesta = make_response(jsonify({
        'mensaje': 'Cookies de demostraci√≥n establecidas',
        'cookies_creadas': [
            'rastreador_analytics',
            'id_sesion_demo', 
            'preferencias_usuario',
            'ultimo_visitado',
            'cookie_publicitaria'
        ]
    }))
    
    # Establecer varias cookies de demostraci√≥n
    respuesta.set_cookie('rastreador_analytics', 'GA1.2.123456789.0987654321', max_age=30*24*60*60)
    respuesta.set_cookie('id_sesion_demo', 'ses_' + hashlib.md5(str(datetime.now()).encode()).hexdigest()[:16])
    respuesta.set_cookie('preferencias_usuario', 'idioma=es&tema=oscuro&notificaciones=si')
    respuesta.set_cookie('ultimo_visitado', datetime.now().strftime('%Y-%m-%d_%H:%M:%S'))
    respuesta.set_cookie('cookie_publicitaria', 'anuncio_' + hashlib.sha1(str(datetime.now()).encode()).hexdigest()[:12])
    
    return respuesta

@app.route('/limpiar-cookies')
def limpiar_cookies():
    """Limpiar todas las cookies para mostrar la diferencia"""
    from flask import make_response
    
    respuesta = make_response(jsonify({
        'mensaje': 'Todas las cookies han sido eliminadas',
        'cookies_eliminadas': list(request.cookies.keys()) if request.cookies else []
    }))
    
    # Eliminar todas las cookies existentes
    if request.cookies:
        for cookie_name in request.cookies.keys():
            respuesta.set_cookie(cookie_name, '', expires=0)
    
    return respuesta

@app.route('/prueba-huella-digital')
def prueba_huella_digital():
    """Endpoint especializado para pruebas de huella digital"""
    user_agent = request.headers.get('User-Agent', '')
    accept_headers = request.headers.get('Accept', '')
    accept_language = request.headers.get('Accept-Language', '')
    accept_encoding = request.headers.get('Accept-Encoding', '')
    
    # Crear una huella digital m√°s detallada
    huella_completa = f"{user_agent}{accept_headers}{accept_language}{accept_encoding}"
    huella_hash = hashlib.sha256(huella_completa.encode()).hexdigest()
    
    return jsonify({
        'huella_digital': {
            'hash_completo': huella_hash,
            'componentes': {
                'user_agent': user_agent,
                'accept_headers': accept_headers,
                'accept_language': accept_language,
                'accept_encoding': accept_encoding
            },
            'unicidad_estimada': len(set(huella_completa)) / len(huella_completa) if huella_completa else 0,
            'explicacion': 'Esta huella digital combina m√∫ltiples caracter√≠sticas de tu navegador para crear un identificador √∫nico'
        }
    })

@app.route('/consejos-privacidad')
def consejos_privacidad():
    """P√°gina con consejos completos de privacidad"""
    consejos = {
        'navegadores_seguros': [
            {
                'nombre': 'Firefox con configuraci√≥n endurecida',
                'descripcion': 'Mozilla Firefox con about:config modificado para m√°xima privacidad',
                'nivel': 'Intermedio',
                'pasos': [
                    'Descargar Firefox desde mozilla.org',
                    'Ir a about:config',
                    'Establecer privacy.resistFingerprinting = true',
                    'Establecer privacy.trackingprotection.enabled = true',
                    'Deshabilitar WebRTC y geolocalizaci√≥n'
                ]
            },
            {
                'nombre': 'Tor Browser',
                'descripcion': 'El navegador m√°s privado disponible, enruta tr√°fico a trav√©s de la red Tor',
                'nivel': 'Avanzado',
                'pasos': [
                    'Descargar desde torproject.org',
                    'Verificar firmas criptogr√°ficas',
                    'Usar siempre en pantalla completa',
                    'No instalar extensiones adicionales',
                    'No iniciar sesi√≥n en cuentas personales'
                ]
            }
        ],
        'extensiones_privacidad': [
            {
                'nombre': 'uBlock Origin',
                'proposito': 'Bloquea anuncios, rastreadores y malware',
                'instalacion': 'Disponible en tiendas oficiales de extensiones'
            },
            {
                'nombre': 'Privacy Badger',
                'proposito': 'Bloquea rastreadores autom√°ticamente',
                'instalacion': 'Desarrollado por Electronic Frontier Foundation'
            },
            {
                'nombre': 'ClearURLs',
                'proposito': 'Elimina par√°metros de seguimiento de URLs',
                'instalacion': 'Limpia autom√°ticamente enlaces maliciosos'
            },
            {
                'nombre': 'Canvas Blocker',
                'proposito': 'Previene fingerprinting por canvas HTML5',
                'instalacion': 'Falsifica o bloquea lecturas de canvas'
            }
        ],
        'vpn_recomendadas': [
            {
                'categoria': 'M√°xima Privacidad',
                'opciones': ['Mullvad VPN', 'IVPN', 'ProtonVPN'],
                'caracteristicas': ['Sin logs', 'Pagos an√≥nimos', 'Jurisdicciones favorables']
            },
            {
                'categoria': 'Equilibrio Precio/Privacidad',
                'opciones': ['Surfshark', 'NordVPN', 'ExpressVPN'],
                'caracteristicas': ['Buena velocidad', 'Muchos servidores', 'Aplicaciones f√°ciles']
            }
        ],
        'configuraciones_dispositivo': {
            'telefono': [
                'Deshabilitar ubicaci√≥n en aplicaciones innecesarias',
                'Usar DNS privados (1.1.1.1 o 9.9.9.9)',
                'Revisar permisos de aplicaciones regularmente',
                'Usar tiendas de aplicaciones alternativas (F-Droid para Android)'
            ],
            'computadora': [
                'Usar sistema operativo enfocado en privacidad (Linux)',
                'Cifrar disco duro completo',
                'Usar firewall local',
                'Revisar aplicaciones que se inician autom√°ticamente'
            ]
        },
        'habitos_seguros': [
            'Usar diferentes contrase√±as para cada servicio',
            'Habilitar autenticaci√≥n de dos factores',
            'Revisar configuraciones de privacidad regularmente',
            'Leer pol√≠ticas de privacidad antes de usar servicios',
            'Usar motores de b√∫squeda privados (DuckDuckGo, Startpage)',
            'Evitar redes WiFi p√∫blicas para actividades sensibles'
        ]
    }
    
    return jsonify({
        'titulo': 'Gu√≠a Completa de Privacidad Digital',
        'consejos': consejos,
        'mensaje': 'La privacidad es un derecho fundamental. Estos consejos te ayudar√°n a protegerla.',
        'actualizacion': datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC')
    })

@app.route('/salud')
def verificar_salud():
    """Endpoint de verificaci√≥n de salud"""
    return jsonify({
        'estado': 'activo',
        'servicio': 'Servidor de An√°lisis de Exposici√≥n de Datos - Edici√≥n Revelada (Espa√±ol)',
        'version': '2.0',
        'endpoints_disponibles': [
            '/ - P√°gina principal de demostraci√≥n',
            '/analizar - An√°lisis completo de exposici√≥n de datos',
            '/establecer-cookies-demo - Establecer cookies de demostraci√≥n',
            '/limpiar-cookies - Eliminar todas las cookies',
            '/prueba-huella-digital - Prueba especializada de fingerprinting',
            '/consejos-privacidad - Gu√≠a completa de privacidad',
            '/reporte-privacidad - Reporte detallado personalizado',
            '/comparar-navegadores - Comparaci√≥n de navegadores por privacidad',
            '/prueba-configuracion - Probar configuraci√≥n de privacidad actual',
            '/salud - Este endpoint de estado'
        ],
        'timestamp': datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC')
    })

@app.route('/reporte-privacidad')
def generar_reporte_privacidad():
    """Generar un reporte detallado de privacidad para el usuario"""
    ip_cliente = request.headers.get('X-Forwarded-For', 
                request.headers.get('X-Real-IP', 
                request.remote_addr)).split(',')[0].strip()
    
    datos_ubicacion = obtener_ubicacion_ip(ip_cliente)
    user_agent = request.headers.get('User-Agent', 'Desconocido')
    so_info, info_navegador = analizar_user_agent(user_agent)
    
    reporte = {
        'fecha_reporte': datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC'),
        'resumen_ejecutivo': {
            'puntuacion_privacidad': calcular_puntuacion_privacidad(request),
            'nivel_riesgo': evaluar_riesgo_seguimiento(request)['nivel'],
            'recomendacion_principal': 'Usar VPN y bloquear rastreadores'
        },
        'analisis_detallado': {
            'exposicion_red': {
                'ip_visible': ip_cliente,
                'ubicacion_aproximada': f"{datos_ubicacion['ciudad']}, {datos_ubicacion['pais']}",
                'proveedor_internet': datos_ubicacion['isp'],
                'riesgo': 'ALTO' if not ip_cliente.startswith(('127.', '192.168.')) else 'BAJO'
            },
            'huella_navegador': {
                'sistema_operativo': so_info,
                'navegador': info_navegador,
                'idioma': request.headers.get('Accept-Language', 'Desconocido').split(',')[0],
                'cookies_presentes': len(request.cookies) if request.cookies else 0
            }
        },
        'recomendaciones_personalizadas': [],
        'pasos_inmediatos': [
            'Instalar uBlock Origin en tu navegador',
            'Considerar usar una VPN confiable',
            'Revisar y limpiar cookies regularmente',
            'Configurar Do Not Track en tu navegador'
        ],
        'recursos_adicionales': [
            'https://privacyguides.org - Gu√≠as de privacidad actualizadas',
            'https://www.eff.org - Electronic Frontier Foundation',
            'https://duckduckgo.com - Motor de b√∫squeda privado',
            'https://www.torproject.org - Navegador Tor para m√°xima privacidad'
        ]
    }
    
    # Generar recomendaciones personalizadas basadas en el an√°lisis
    if len(request.cookies) > 10:
        reporte['recomendaciones_personalizadas'].append(
            'Tienes muchas cookies. Considera limpiarlas regularmente o usar modo inc√≥gnito.'
        )
    
    if not request.headers.get('DNT'):
        reporte['recomendaciones_personalizadas'].append(
            'Activa la configuraci√≥n "Do Not Track" en tu navegador.'
        )
    
    if 'Windows' in so_info:
        reporte['recomendaciones_personalizadas'].append(
            'Como usuario de Windows, considera usar Firefox con configuraci√≥n endurecida.'
        )
    
    if not request.is_secure:
        reporte['recomendaciones_personalizadas'].append(
            'CR√çTICO: Est√°s usando una conexi√≥n no segura (HTTP). Siempre usa HTTPS.'
        )
    
    return jsonify(reporte)

@app.route('/comparar-navegadores')
def comparar_navegadores():
    """Comparar diferentes navegadores desde una perspectiva de privacidad"""
    comparacion = {
        'metodologia': 'Comparaci√≥n basada en caracter√≠sticas de privacidad por defecto',
        'ultima_actualizacion': datetime.now().strftime('%Y-%m-%d'),
        'navegadores': {
            'Tor Browser': {
                'puntuacion_privacidad': 95,
                'ventajas': [
                    'M√°xima privacidad y anonimato',
                    'Bloquea fingerprinting por defecto',
                    'Enruta tr√°fico a trav√©s de la red Tor',
                    'No guarda historial por defecto'
                ],
                'desventajas': [
                    'M√°s lento que otros navegadores',
                    'Algunos sitios pueden bloquearlo',
                    'Curva de aprendizaje para nuevos usuarios'
                ],
                'recomendado_para': 'Usuarios que necesitan m√°xima privacidad'
            },
            'Firefox (configurado)': {
                'puntuacion_privacidad': 85,
                'ventajas': [
                    'Altamente configurable para privacidad',
                    'Extensiones de privacidad excelentes',
                    'Desarrollado por organizaci√≥n sin fines de lucro',
                    'Resistencia a fingerprinting disponible'
                ],
                'desventajas': [
                    'Requiere configuraci√≥n manual',
                    'Puede romper algunos sitios web',
                    'Menos soporte para sitios empresariales'
                ],
                'recomendado_para': 'Usuarios t√©cnicos que valoran privacidad'
            },
            'Safari': {
                'puntuacion_privacidad': 70,
                'ventajas': [
                    'Buen bloqueo de rastreadores por defecto',
                    'Integrado con el ecosistema Apple',
                    'Prevenci√≥n inteligente de seguimiento',
                    'Protecci√≥n de correo privado'
                ],
                'desventajas': [
                    'Solo disponible en dispositivos Apple',
                    'Menos extensiones de privacidad',
                    'Control limitado sobre configuraciones'
                ],
                'recomendado_para': 'Usuarios del ecosistema Apple'
            },
            'Google Chrome': {
                'puntuacion_privacidad': 40,
                'ventajas': [
                    'R√°pido y compatible con la mayor√≠a de sitios',
                    'Sincronizaci√≥n entre dispositivos',
                    'Actualizaciones de seguridad regulares',
                    'Gran ecosistema de extensiones'
                ],
                'desventajas': [
                    'Desarrollado por empresa de publicidad',
                    'Recopila muchos datos por defecto',
                    'Historial de preocupaciones de privacidad',
                    'Fingerprinting habilitado por defecto'
                ],
                'recomendado_para': 'Usuarios que priorizan conveniencia sobre privacidad'
            },
            'Microsoft Edge': {
                'puntuacion_privacidad': 50,
                'ventajas': [
                    'Mejores caracter√≠sticas de privacidad que Chrome',
                    'Integrado con Windows',
                    'Prevenci√≥n de seguimiento configurable',
                    'Microsoft Defender integrado'
                ],
                'desventajas': [
                    'Desarrollado por Microsoft (preocupaciones de datos)',
                    'Menos maduro en caracter√≠sticas de privacidad',
                    'Telemetr√≠a habilitada por defecto'
                ],
                'recomendado_para': 'Usuarios de Windows que quieren mejor privacidad que Chrome'
            }
        },
        'recomendaciones_generales': [
            'Para m√°xima privacidad: Tor Browser',
            'Para uso diario con buena privacidad: Firefox configurado',
            'Para usuarios de Apple: Safari con configuraciones endurecidas',
            'Evitar: Chrome sin extensiones de privacidad'
        ]
    }
    
    return jsonify(comparacion)

@app.route('/prueba-configuracion')
def probar_configuracion_privacidad():
    """Probar qu√© tan bien est√° configurado el navegador para privacidad"""
    resultados_prueba = {
        'fecha_prueba': datetime.now().strftime('%Y-%m-%d %H:%M:%S UTC'),
        'puntuacion_total': 0,
        'pruebas': {}
    }
    
    # Prueba 1: Do Not Track
    dnt = request.headers.get('DNT')
    if dnt == '1':
        resultados_prueba['pruebas']['do_not_track'] = {
            'estado': 'APROBADO',
            'puntos': 10,
            'descripcion': 'Do Not Track est√° habilitado'
        }
        resultados_prueba['puntuacion_total'] += 10
    else:
        resultados_prueba['pruebas']['do_not_track'] = {
            'estado': 'FALLO',
            'puntos': 0,
            'descripcion': 'Do Not Track no est√° habilitado',
            'solucion': 'Activa DNT en configuraci√≥n del navegador'
        }
    
    # Prueba 2: Cantidad de cookies
    num_cookies = len(request.cookies) if request.cookies else 0
    if num_cookies == 0:
        resultados_prueba['pruebas']['cookies'] = {
            'estado': 'EXCELENTE',
            'puntos': 20,
            'descripcion': 'Sin cookies detectadas'
        }
        resultados_prueba['puntuacion_total'] += 20
    elif num_cookies <= 5:
        resultados_prueba['pruebas']['cookies'] = {
            'estado': 'BUENO',
            'puntos': 15,
            'descripcion': f'Pocas cookies detectadas ({num_cookies})'
        }
        resultados_prueba['puntuacion_total'] += 15
    elif num_cookies <= 10:
        resultados_prueba['pruebas']['cookies'] = {
            'estado': 'ADVERTENCIA',
            'puntos': 10,
            'descripcion': f'Cantidad moderada de cookies ({num_cookies})'
        }
        resultados_prueba['puntuacion_total'] += 10
    else:
        resultados_prueba['pruebas']['cookies'] = {
            'estado': 'FALLO',
            'puntos': 0,
            'descripcion': f'Demasiadas cookies ({num_cookies})',
            'solucion': 'Limpia cookies regularmente o usa modo inc√≥gnito'
        }
    
    # Prueba 3: Conexi√≥n segura
    if request.is_secure:
        resultados_prueba['pruebas']['conexion_segura'] = {
            'estado': 'APROBADO',
            'puntos': 15,
            'descripcion': 'Usando conexi√≥n HTTPS segura'
        }
        resultados_prueba['puntuacion_total'] += 15
    else:
        resultados_prueba['pruebas']['conexion_segura'] = {
            'estado': 'CR√çTICO',
            'puntos': 0,
            'descripcion': 'Usando conexi√≥n HTTP insegura',
            'solucion': 'Siempre usa HTTPS. Instala extensi√≥n HTTPS Everywhere'
        }
    
    # Prueba 4: Headers de fingerprinting
    headers_fp = ['Sec-Ch-Ua', 'Sec-Ch-Ua-Platform', 'Sec-Ch-Ua-Mobile']
    headers_detectados = [h for h in headers_fp if request.headers.get(h)]
    
    if len(headers_detectados) == 0:
        resultados_prueba['pruebas']['fingerprinting_headers'] = {
            'estado': 'EXCELENTE',
            'puntos': 15,
            'descripcion': 'Sin headers de fingerprinting detectados'
        }
        resultados_prueba['puntuacion_total'] += 15
    elif len(headers_detectados) <= 2:
        resultados_prueba['pruebas']['fingerprinting_headers'] = {
            'estado': 'ADVERTENCIA',
            'puntos': 5,
            'descripcion': f'Algunos headers de fingerprinting presentes ({len(headers_detectados)})'
        }
        resultados_prueba['puntuacion_total'] += 5
    else:
        resultados_prueba['pruebas']['fingerprinting_headers'] = {
            'estado': 'FALLO',
            'puntos': 0,
            'descripcion': 'Muchos headers de fingerprinting detectados',
            'solucion': 'Usa Firefox con privacy.resistFingerprinting=true'
        }
    
    # Prueba 5: Referer header
    referer = request.headers.get('Referer')
    if not referer:
        resultados_prueba['pruebas']['referer_header'] = {
            'estado': 'APROBADO',
            'puntos': 10,
            'descripcion': 'Sin header Referer que exponga historial'
        }
        resultados_prueba['puntuacion_total'] += 10
    else:
        resultados_prueba['pruebas']['referer_header'] = {
            'estado': 'FALLO',
            'puntos': 0,
            'descripcion': 'Header Referer presente, expone historial de navegaci√≥n',
            'solucion': 'Configura navegador para no enviar referer o usar extensi√≥n'
        }
    
    # Determinar nivel general
    if resultados_prueba['puntuacion_total'] >= 60:
        nivel = 'EXCELENTE'
        mensaje = 'Tu configuraci√≥n de privacidad es muy buena'
    elif resultados_prueba['puntuacion_total'] >= 40:
        nivel = 'BUENO'
        mensaje = 'Tu configuraci√≥n de privacidad es decente pero mejorable'
    elif resultados_prueba['puntuacion_total'] >= 20:
        nivel = 'REGULAR'
        mensaje = 'Tu configuraci√≥n de privacidad necesita mejoras'
    else:
        nivel = 'CR√çTICO'
        mensaje = 'Tu configuraci√≥n de privacidad est√° muy expuesta'
    
    resultados_prueba['nivel_general'] = nivel
    resultados_prueba['mensaje'] = mensaje
    resultados_prueba['puntuacion_maxima'] = 70
    
    return jsonify(resultados_prueba)

if __name__ == '__main__':
    print("üïµÔ∏è SERVIDOR DE AN√ÅLISIS DE EXPOSICI√ìN DE DATOS - EDICI√ìN REVELADA (ESPA√ëOL)")
    print("=" * 80)
    print("üö® ADVERTENCIA: Esta es una herramienta educativa de ciberseguridad")
    print("üìö Prop√≥sito: Demostrar qu√© datos pueden recopilar los sitios web")
    print("üõ°Ô∏è Usar para: Educaci√≥n en privacidad y concienciaci√≥n en seguridad")
    print()
    print("üåê Servidor inici√°ndose en: http://localhost:5000")
    print("üìñ Documentaci√≥n de API: http://localhost:5000/salud")
    print()
    print("‚ö†Ô∏è  RECUERDA: Los sitios web reales pueden recopilar TODA esta informaci√≥n")
    print("üîí PROT√âGETE: Usa VPN, bloqueadores de anuncios y navegadores seguros")
    print("=" * 80)
    
    # Ejecutar servidor Flask
    app.run(
        host='0.0.0.0',
        port=5000,
        debug=True,
        threaded=True
    )
